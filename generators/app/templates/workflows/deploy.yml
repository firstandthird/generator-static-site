# Version: 1.3.0

name: <%= name %> Deploy

on: push

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v1
    - uses: chrislennon/action-aws-cli@v1.1
    - name: aws creds
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install
      run: |
        npm install
    <% if (clientkit) { %>
    - name: clientkit
      run: |
        npx clientkit prod
    <% } %>
    - name: Deploy (Production)
      if: success() && github.ref == 'refs/heads/master'
      env:
        BUCKET: <%= bucket %>
      run: |
        aws s3 sync --acl public-read <%= buildPath %> s3://$BUCKET/
    - name: Deploy (Stage)
      if: success() && github.ref != 'refs/heads/master'
      id: deploy
      env:
        BUCKET: <%= bucket %>
      run: |
        BRANCH=$(echo ${{ github.ref }} | sed -E 's|refs/[a-zA-Z]+/||')
        BUCKETFULLNAME=$BUCKET-$BRANCH
        BUCKETNAME=$(echo ${BUCKETFULLNAME:0:63})
        aws s3 mb s3://$BUCKETNAME/
        aws s3 sync --exclude '.git/*' --exclude 'node_modules/*' --exclude '.github/*' --delete --acl public-read <%= buildPath %> s3://$BUCKETNAME/
        aws s3 website s3://$BUCKETNAME/ --index-document index.html --error-document error.html
        URL=$(echo http://$BUCKETNAME.s3-website.us-east-1.amazonaws.com)
        echo ::set-output name=url::$URL
        echo ::set-output name=branch::$BRANCH
    - name: Status Color
      id: statuscolor
      run: |
        STATUS_COLOR=$([ ${{ job.status }} == 'Success' ] && echo '#2ECC71' || echo '#E74C3C')
        echo ::set-output name=status_color::$STATUS_COLOR
    - name: Slack Notification (Stage)
      if: github.ref != 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      with:
        status: custom
        payload: |
          {
            text: "<%= name %> | Deploy | ${{ steps.deploy.outputs.branch }}",
            attachments: [{
              "author_name": "<%= name %> Stage", // json
              fallback: 'fallback',
              color: '${{ steps.statuscolor.outputs.status_color }}',
              title: 'Status',
              text: '${{ job.status }}',
              fields: [{
                title: 'Staging Url',
                value: '${{ steps.deploy.outputs.url }}',
                short: false
              }, {
                title: 'Stack Name',
                value: '${{ steps.deploy.outputs.branch }}',
                short: true
              }, {
                title: 'Branch',
                value: '${{ github.ref }}'.replace('refs/heads/', ''),
                short: true
              }],
              actions: [{
              }]
            }]
          }
    - name: Slack Notification (Production)
      if: github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      with:
        status: custom
        payload: |
          {
            text: "<%= name %> | Deploy | Production",
            attachments: [{
              "author_name": "<%= name %> Production", // json
              fallback: 'fallback',
              color: '${{ steps.statuscolor.outputs.status_color }}',
              title: 'Status',
              text: '${{ job.status }}',
              fields: [{
                title: 'Url',
                text: '<%= production %>',
                short: false
              }, {
                title: 'Branch',
                value: 'master',
                short: true
              }],
              actions: [{
              }]
            }]
          }